#!/bin/bash
#
# A hook script to update the version numbers
#  post-commit
OS=`uname -s`
# echo "OS: $OS"

# git rev-parse --abbrev-ref HEAD
version=$(git rev-parse --abbrev-ref HEAD)
versionurl="$(echo $version | sed 's/#/%23/g')"
# version=$(git tag -l v* |tail -1)
# echo "branch: $version"
if [[ "$version" =~ v[0-9]\. ]]; then
	# echo "version: $version"
	# numver=$(echo $version | sed -E 's/v(.*)/\1/')
	# numver=$(echo $version | sed -E 's/v(.*)-.*/\1/')
	numver=$(echo $version | sed -E 's/v([^-]*)/\1/')
	# echo "numver: $numver"

	if [ "$OS" == 'Darwin' ]; then

		# Missing whitespace around operator (E225)	-	There should be one space before and after all operators.
		sed -i '' -e "s/version *= *\"[^\"]*\"[^,]^/version = \"${numver}\"/" $(find . -name "*.py")
		sed -i '' -e "s/version = \"[^\"]*\"/version = \"${numver}\"/" $(find . -name "*.py")
		# Unexpected spaces around keyword / parameter equals (E251)	-	There should be no spaces before or after the = in a function definition.
		sed -i '' -e "s/version *= *\"[^\"]*\",/version=\"${numver}\",/" $(find . -name "*.py")
		#	Version Test
		sed -i '' -e "s/#    Version .*/#    Version ${numver}/" $(find . -name "*.py")
		# sed -i '' -e "s/\(.*\)branch=[^&]*/\1branch=${versionurl}/" README.md
	else
		# Missing whitespace around operator (E225)	-	There should be one space before and after all operators.
		sed -i -e "s/version *= *\"[^\"]*\"[^,]^/version = \"${numver}\"/" $(find . -name "*.py")
		sed -i -e "s/version = \"[^\"]*\"/version = \"${numver}\"/" $(find . -name "*.py")
		# Unexpected spaces around keyword / parameter equals (E251)	-	There should be no spaces before or after the = in a function definition.
		sed -i -e "s/version *= *\"[^\"]*\",/version=\"${numver}\",/" $(find . -name "*.py")
		sed -i -e "s/#    Version .*/#    Version ${numver}/" $(find . -name "*.py")
		# sed -i -e "s/\(.*\)branch=[^&]*/\1branch=${versionurl}/" README.md
	fi


	# git commit -m "Update version to ${version}"
	if ! git diff-index --quiet HEAD --; then
		# echo "commit: Update version to $version"
		git add README.md
		git add $(find . -name "*.py")
		git commit -m "Update version to ${numver}"
	fi
else
	echo "version ($version) not pattern 'v[0-9]\.'"
	echo "OS: $OS"
	# if [ "$OS" == 'Darwin' ]; then
	# 	echo sed -i '' -e '"s/\(.*\)branch=[^&]*/\1branch=${versionurl}/"' README.md
	# 	sed -i '' -e "s/\(.*\)branch=[^&]*/\1branch=${versionurl}/" README.md
	# else
	# 	echo sed -i -e '"s/\(.*\)branch=[^&]*/\1branch=${versionurl}/"' README.md
	# 	sed -i -e "s/\(.*\)branch=[^&]*/\1branch=${versionurl}/" README.md
	# fi

	if ! git diff-index --quiet HEAD --; then
		# echo "commit: Update version to $version"
		git add README.md
		git commit -m "Update version to ${version}"
	fi
fi




# if [[ "$date" =~ "[0-9]\{8\}" ]]; then
#     echo "Valid date"
# else
#     echo "Invalid date"
# fi
